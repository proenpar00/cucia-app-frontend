{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cabel\\\\Desktop\\\\AppCucia_Extended\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport NavBar from './components/NavBar';\nimport ImageUploader from './components/ImageUploader';\nimport ImagePreview from './components/ImagePreview';\nimport ModelSelector from './components/ModelSelector';\nimport DiagnosisButton from './components/DiagnosisButton';\nimport DiagnosisResult from './components/DiagnosisResult';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [modelLoaded, setModelLoaded] = useState(false);\n  const [imageId, setImageId] = useState(null);\n  const [result, setResult] = useState(null);\n  const [model, setModel] = useState(null);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedImage(file);\n      setPreviewUrl(URL.createObjectURL(file));\n      setModelLoaded(false);\n      setResult(null);\n    }\n  };\n  const handleLoadModel = async () => {\n    if (!selectedImage) {\n      alert('Por favor, sube una imagen primero');\n      return;\n    }\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('image', selectedImage);\n    formData.append('model', model);\n    try {\n      var _response$data;\n      const response = await axios.post(`${process.env.REACT_APP_API}/api/v1/image`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.id) {\n        setImageId(response.data.id);\n        setModelLoaded(true);\n      }\n    } catch (error) {\n      alert('Error al cargar el modelo: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleShowDiagnosis = async () => {\n    if (!imageId) {\n      alert('No hay diagn贸stico disponible.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API}/api/v1/image/${imageId}`);\n      setPreviewUrl(`data:image/jpeg;base64,${response.data.base64}`);\n      setResult(response.data);\n    } catch (error) {\n      alert('Error al obtener el diagn贸stico: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderInitialView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"intro-container\",\n    children: [/*#__PURE__*/_jsxDEV(ImageUploader, {\n      onImageChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModelSelector, {\n      onSelect: setModel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiagnosisButton, {\n      modelLoaded: modelLoaded,\n      onClick: modelLoaded ? handleShowDiagnosis : handleLoadModel,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n  const renderDiagnosisView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagnosis-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(ImagePreview, {\n        preview: previewUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiagnosisButton, {\n        modelLoaded: modelLoaded,\n        onClick: handleShowDiagnosis,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: /*#__PURE__*/_jsxDEV(DiagnosisResult, {\n        detections: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), result ? renderDiagnosisView() : renderInitialView()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"K0f3OiBoVv1bVVDadrkx6sElhlI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","NavBar","ImageUploader","ImagePreview","ModelSelector","DiagnosisButton","DiagnosisResult","jsxDEV","_jsxDEV","App","_s","selectedImage","setSelectedImage","previewUrl","setPreviewUrl","loading","setLoading","modelLoaded","setModelLoaded","imageId","setImageId","result","setResult","model","setModel","handleImageChange","event","file","target","files","URL","createObjectURL","handleLoadModel","alert","formData","FormData","append","_response$data","response","post","process","env","REACT_APP_API","headers","data","id","error","message","handleShowDiagnosis","get","base64","renderInitialView","className","children","onImageChange","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","onClick","renderDiagnosisView","preview","detections","_c","$RefreshReg$"],"sources":["C:/Users/cabel/Desktop/AppCucia_Extended/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport NavBar from './components/NavBar';\nimport ImageUploader from './components/ImageUploader';\nimport ImagePreview from './components/ImagePreview';\nimport ModelSelector from './components/ModelSelector';\nimport DiagnosisButton from './components/DiagnosisButton';\nimport DiagnosisResult from './components/DiagnosisResult';\nimport './App.css';\n\nconst App = () => {\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [modelLoaded, setModelLoaded] = useState(false);\n  const [imageId, setImageId] = useState(null);\n  const [result, setResult] = useState(null);\n  const [model, setModel] = useState(null);\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedImage(file);\n      setPreviewUrl(URL.createObjectURL(file));\n      setModelLoaded(false);\n      setResult(null);\n    }\n  };\n\n  const handleLoadModel = async () => {\n    if (!selectedImage) {\n      alert('Por favor, sube una imagen primero');\n      return;\n    }\n\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('image', selectedImage);\n    formData.append('model', model);\n\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API}/api/v1/image`, formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n\n      if (response.data?.id) {\n        setImageId(response.data.id);\n        setModelLoaded(true);\n      }\n    } catch (error) {\n      alert('Error al cargar el modelo: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleShowDiagnosis = async () => {\n    if (!imageId) {\n      alert('No hay diagn贸stico disponible.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API}/api/v1/image/${imageId}`);\n      setPreviewUrl(`data:image/jpeg;base64,${response.data.base64}`);\n      setResult(response.data);\n    } catch (error) {\n      alert('Error al obtener el diagn贸stico: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderInitialView = () => (\n    <div className=\"intro-container\">\n      <ImageUploader onImageChange={handleImageChange} />\n      <ModelSelector onSelect={setModel} />\n      <DiagnosisButton\n        modelLoaded={modelLoaded}\n        onClick={modelLoaded ? handleShowDiagnosis : handleLoadModel}\n        loading={loading}\n      />\n    </div>\n  );\n\n  const renderDiagnosisView = () => (\n    <div className=\"diagnosis-container\">\n      <div className=\"left-panel\">\n        <ImagePreview preview={previewUrl} />\n        <DiagnosisButton\n          modelLoaded={modelLoaded}\n          onClick={handleShowDiagnosis}\n          loading={loading}\n        />\n      </div>\n      <div className=\"right-panel\">\n        <DiagnosisResult detections={result} />\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"app-container\">\n      <NavBar />\n      {result ? renderDiagnosisView() : renderInitialView()}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}